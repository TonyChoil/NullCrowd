<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamtwo.nullfunding.Community.model.dao.CommunityMapper">

    <resultMap type="CommunityDTO" id="CommunityResultMap">
        <id property="articleNo" column="ARTICLE_NO"/>
<!--        <result property="nickName" column="NICK_NAME"/>-->
        <result property="memCode" column="MEM_CODE"/>
        <result property="title" column="TITLE"/>
        <result property="content" column="CONTENT"/>
        <result property="uploadDate" column="UPLOAD_DATE"/>

        <association property="writer" resultMap="memberResultMap"/>
<!--        <association property="category" resultMap="categoryResultMap"/>-->
    </resultMap>

    <resultMap type="MemberDTO" id="memberResultMap">
        <id property="memCode" column="MEM_CODE"/>
        <result property="authCode" column="AUTH_CODE"/>
        <result property="memEmail" column="MEM_EMAIL"/>
        <result property="memPwd" column="MEM_PWD"/>
        <result property="isActive" column="IS_ACTIVE"/>
        <result property="regiDate" column="REGI_DATE"/>
        <result property="nickName" column="NICKNAME"/>
        <result property="recentLogin" column="RECENTLOGIN"/>
    </resultMap>

    <resultMap type="ComCommentDTO" id="ComCommentResultMap">
        <id property="commentNo" column="COMMENT_NO"/>
        <result property="nickName" column="NICK_NAME"/>
        <result property="memCode" column="MEM_CODE"/>
        <result property="articleNo" column="ARTICLE_NO"/>
        <result property="content" column="CONTENT"/>
        <result property="uploadDate" column="UPLOAD_DATE"/>

        <association property="writer" resultMap="memberResultMap"/>
    </resultMap>

    <!-- 모든 게시판 리스트 조회 -->
    <select id="selectAllCommunityList" resultMap="CommunityResultMap">
        SELECT A.ARTICLE_NO
             , B.MEM_CODE
             , A.TITLE
             , A.CONTENT
             , A.UPLOAD_DATE
        FROM Community A
                 JOIN MEMBER B ON (A.MEM_CODE = B.MEM_CODE)
        ORDER BY A.ARTICLE_NO DESC
    </select>

    <!-- 게시판 게시글 추가 -->
    <insert id="insertCommunity" parameterType="CommunityDTO">
        INSERT
        INTO COMMUNITY (
             ARTICLE_NO
             , MEM_CODE
             , TITLE
             , CONTENT
             , UPLOAD_DATE
        )
        VALUES
            (
            SEQ_COMMUNITY_NO.NEXTVAL
            , #{ memCode }
            , #{ title }
            , #{ content }
            , SYSDATE
            )
    </insert>

    <!-- 게시판 게시글 수정 ㅇㅇ -->
    <update id="updateCommunity" parameterType="CommunityDTO">
        UPDATE
            COMMUNITY A
        SET A.TITLE   = #{ title }
          , A.CONTENT = #{ content }
        WHERE A.ARTICLE_NO = #{ no }
    </update>

    <!-- 공지사항 게시글 삭제 ㅇㅇ -->
    <delete id="deleteCommunity" parameterType="int">
        DELETE
        FROM COMMUNITY A
        WHERE A.ARTICLE_NO = #{ no }
    </delete>

    <!-- 검색하여 게시판 조회 ㅇㅇ -->
    <select id="selectChoiceCommunity" parameterType="int" resultMap="CommunityResultMap">
        SELECT A.ARTICLE_NO
             , B.MEM_CODE
             , A.TITLE
             , A.CONTENT
             , A.UPLOAD_DATE
        FROM COMMUNITY A
                 JOIN MEMBER B ON (A.MEM_CODE = B.MEM_CODE)
        WHERE A.ARTICLE_NO = #{ no }
    </select>

    <!-- 모든 댓글 리스트 조회 ㅇㅇ -->
    <select id="selectComCommentList" resultMap="ComCommentResultMap">
        SELECT /* com.teamtwo.nullfunding.community.model.dao.CommunityMapper#selectComCommentList() */
            A.COMMENT_NO
             , A.ARTICLE_NO
             , A.CONTENT
             , A.UPLOAD_DATE
             , B.MEM_CODE
             , B.NICKNAME
        FROM COMMUNITY A
                 JOIN MEMBER B ON (A.MEM_CODE = B.MEM_CODE)
        WHERE A.CONTENT IS NOT NULL
        ORDER BY A.COMMENT_NO
    </select>

    <!-- 게시판 댓글 추가 ㅇㅇ -->
    <insert id="comCommentReply">
        INSERT /* com.teamtwo.nullfunding.community.model.dao.CommunityMapper#insertComComment() */
        INTO TBL_REPLY A (
          A.COMMENT_NO
        , A.ARTICLE_NO
        , A.MEM_CODE
        , A.CONTENT
        , A.UPLOAD_DATE
        )
        VALUES
            (
            SEQ_COMMENT_NO.NEXTVAL
                , #{ articleNo }
                , #{ memCode }
                , #{ content }
                , #{ content }
            )
    </insert>

    <!-- 모든 게시판 리스트 조회 ㅇㅇ -->
    <delete id="deleteReply" parameterType="long">
        DELETE /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#deleteReply() */
        FROM TBL_REPLY A
        WHERE A.REPLY_NO = #{ replyNo }
    </delete>

    <resultMap type="CommunityDTO" id="CommunityResultMap">
        <id property="CommunityNo" column="Community_NO"/>
        <result property="nickName" column="NICK_NAME"/>
        <result property="CommunityTitle" column="Community_TITLE"/>
        <result property="CommunityContent" column="Community_CONTENT"/>
        <result property="uploadDate" column="UPLOAD_DATE"/>
        <result property="readCount" column="READ_COUNT"/>
    </resultMap>

    <resultMap type="MemberDTO" id="memberResultMap">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPwd" column="MEMBER_PWD"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="address" column="ADDRESS"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="memberRole" column="MEMBER_ROLE"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
    </resultMap>

    <resultMap type="CategoryDTO" id="categoryResultMap">
        <id property="code" column="CATEGORY_CODE"/>
        <result property="name" column="CATEGORY_NAME"/>
    </resultMap>

    <resultMap type="ReplyDTO" id="replyResultMap">
        <id property="no" column="REPLY_NO"/>
        <result property="refBoardNo" column="REF_BOARD_NO"/>
        <result property="body" column="REPLY_BODY"/>
        <result property="status" column="REPLY_STATUS"/>
        <result property="createdDate" column="CREATED_DATE"/>

        <association property="writer" resultMap="memberResultMap"/>
    </resultMap>

    <resultMap type="BoardDTO" id="thumbnailBoardResultMap">
        <id property="no" column="BOARD_NO"/>
        <result property="type" column="BOARD_TYPE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="title" column="BOARD_TITLE"/>
        <result property="body" column="BOARD_BODY"/>
        <result property="writerMemberNo" column="BOARD_WRITER_MEMBER_NO"/>
        <result property="count" column="BOARD_COUNT"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="modifiedDate" column="MODIFIED_DATE"/>
        <result property="status" column="BOARD_STATUS"/>

        <association property="writer" resultMap="memberResultMap"/>
        <association property="category" resultMap="categoryResultMap"/>

        <collection property="attachmentList" resultMap="attachmentResultMap"/>
    </resultMap>

    <resultMap type="AttachmentDTO" id="attachmentResultMap">
        <id property="no" column="ATTACHMENT_NO"></id>
        <result property="refBoardNo" column="REF_BOARD_NO"/>
        <result property="originalName" column="ORIGINAL_NAME"/>
        <result property="savedName" column="SAVED_NAME"/>
        <result property="savePath" column="SAVE_PATH"/>
        <result property="fileType" column="FILE_TYPE"/>
        <result property="thumbnailPath" column="THUMBNAIL_PATH"/>
        <result property="status" column="ATTACHMENT_STATUS"/>
    </resultMap>

    <!-- 모든 공지사항 리스트 조회 -->    <!-- 완료 ! -->
    <select id="selectAllCommunityList" resultMap="CommunityResultMap">
        SELECT A.Community_NO
             , B.NICKNAME
             , A.Community_TITLE
             , A.Community_CONTENT
             , A.UPLOAD_DATED
             , A.READ_COUNT
        FROM Community A
                 JOIN MEMBER B ON (A.MEMBER_CODE = B.MEM_CODE)
        ORDER BY A.Community_NO DESC
    </select>

    <resultMap type="BoardDTO" id="generalBoardResultMap">
        <id property="no" column="BOARD_NO"/>
        <result property="type" column="BOARD_TYPE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="title" column="BOARD_TITLE"/>
        <result property="body" column="BOARD_BODY"/>
        <result property="writerMemberNo" column="BOARD_WRITER_MEMBER_NO"/>
        <result property="count" column="BOARD_COUNT"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="modifiedDate" column="MODIFIED_DATE"/>
        <result property="status" column="BOARD_STATUS"/>

        <association property="writer" resultMap="memberResultMap"/>
        <association property="category" resultMap="categoryResultMap"/>
    </resultMap>

    <resultMap type="MemberDTO" id="memberResultMap">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPwd" column="MEMBER_PWD"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="address" column="ADDRESS"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="memberRole" column="MEMBER_ROLE"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
    </resultMap>

    <resultMap type="CategoryDTO" id="categoryResultMap">
        <id property="code" column="CATEGORY_CODE"/>
        <result property="name" column="CATEGORY_NAME"/>
    </resultMap>

    <resultMap type="ReplyDTO" id="replyResultMap">
        <id property="no" column="REPLY_NO"/>
        <result property="refBoardNo" column="REF_BOARD_NO"/>
        <result property="body" column="REPLY_BODY"/>
        <result property="status" column="REPLY_STATUS"/>
        <result property="createdDate" column="CREATED_DATE"/>

        <association property="writer" resultMap="memberResultMap"/>
    </resultMap>

    <resultMap type="BoardDTO" id="thumbnailBoardResultMap">
        <id property="no" column="BOARD_NO"/>
        <result property="type" column="BOARD_TYPE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="title" column="BOARD_TITLE"/>
        <result property="body" column="BOARD_BODY"/>
        <result property="writerMemberNo" column="BOARD_WRITER_MEMBER_NO"/>
        <result property="count" column="BOARD_COUNT"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="modifiedDate" column="MODIFIED_DATE"/>
        <result property="status" column="BOARD_STATUS"/>

        <association property="writer" resultMap="memberResultMap"/>
        <association property="category" resultMap="categoryResultMap"/>

        <collection property="attachmentList" resultMap="attachmentResultMap"/>
    </resultMap>

    <resultMap type="AttachmentDTO" id="attachmentResultMap">
        <id property="no" column="ATTACHMENT_NO"></id>
        <result property="refBoardNo" column="REF_BOARD_NO"/>
        <result property="originalName" column="ORIGINAL_NAME"/>
        <result property="savedName" column="SAVED_NAME"/>
        <result property="savePath" column="SAVE_PATH"/>
        <result property="fileType" column="FILE_TYPE"/>
        <result property="thumbnailPath" column="THUMBNAIL_PATH"/>
        <result property="status" column="ATTACHMENT_STATUS"/>
    </resultMap>

    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectTotalCount() */
        COUNT(*)
        FROM TBL_BOARD A
        <if test="searchCondition == 'category'">
            JOIN TBL_CATEGORY B ON(A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        <if test="searchCondition == 'writer'">
            JOIN TBL_MEMBER B ON(A.BOARD_WRITER_MEMBER_NO = B.MEMBER_NO)
        </if>
        <where>
            <if test="searchCondition == 'category'">
                B.CATEGORY_NAME = #{ searchValue }
            </if>
            <if test="searchCondition == 'writer'">
                B.NICKNAME LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'title'">
                A.BOARD_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'content'">
                A.BOARD_BODY LIKE '%' || #{ searchValue } || '%'
            </if>
            AND A.BOARD_STATUS = 'Y'
        </where>
    </select>

    <select id="selectBoardList" resultMap="generalBoardResultMap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectBoardList() */
        A.RNUM
        , A.BOARD_NO
        , A.BOARD_TYPE
        , A.CATEGORY_CODE
        , D.CATEGORY_NAME
        , A.BOARD_TITLE
        , A.BOARD_BODY
        , A.BOARD_WRITER_MEMBER_NO
        , E.NICKNAME
        , A.BOARD_COUNT
        , A.CREATED_DATE
        , A.BOARD_STATUS
        FROM (SELECT ROWNUM RNUM
        , B.BOARD_NO
        , B.BOARD_TYPE
        , B.CATEGORY_CODE
        , B.BOARD_TITLE
        , B.BOARD_BODY
        , B.BOARD_WRITER_MEMBER_NO
        , B.BOARD_COUNT
        , B.CREATED_DATE
        , B.BOARD_STATUS
        FROM (SELECT C.BOARD_NO
        , C.BOARD_TYPE
        , C.CATEGORY_CODE
        , C.BOARD_TITLE
        , C.BOARD_BODY
        , C.BOARD_WRITER_MEMBER_NO
        , C.BOARD_COUNT
        , C.CREATED_DATE
        , C.BOARD_STATUS
        FROM TBL_BOARD C
        <if test="searchCondition == 'category'">
            JOIN TBL_CATEGORY D ON(C.CATEGORY_CODE = D.CATEGORY_CODE)
        </if>
        <if test="searchCondition == 'writer'">
            JOIN TBL_MEMBER D ON(C.BOARD_WRITER_MEMBER_NO = D.MEMBER_NO)
        </if>
        <where>
            <if test="searchCondition == 'category'">
                D.CATEGORY_NAME = #{ searchValue }
            </if>
            <if test="searchCondition == 'writer'">
                D.NICKNAME LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'title'">
                C.BOARD_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'content'">
                C.BOARD_BODY LIKE '%' || #{ searchValue } || '%'
            </if>
            AND C.BOARD_STATUS = 'Y'
            AND C.BOARD_TYPE = 1
        </where>
        ORDER BY C.BOARD_NO DESC
        ) B
        <![CDATA[
                  WHERE ROWNUM <= #{ endRow }
                  ]]>
        ) A
        JOIN TBL_CATEGORY D ON (A.CATEGORY_CODE = D.CATEGORY_CODE)
        JOIN TBL_MEMBER E ON(A.BOARD_WRITER_MEMBER_NO = E.MEMBER_NO)
        WHERE A.RNUM >= #{ startRow }
        ORDER BY 1 ASC
    </select>

    <select id="selectBoardDetail" resultMap="generalBoardResultMap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectBoardDetail() */
            A.BOARD_NO
             , A.BOARD_TITLE
             , A.BOARD_BODY
             , A.BOARD_WRITER_MEMBER_NO
             , B.NICKNAME
             , A.BOARD_COUNT
             , A.CREATED_DATE
             , C.CATEGORY_NAME
        FROM TBL_BOARD A
                 JOIN TBL_MEMBER B ON (A.BOARD_WRITER_MEMBER_NO = B.MEMBER_NO)
                 JOIN TBL_CATEGORY C ON (A.CATEGORY_CODE = C.CATEGORY_CODE)
        WHERE A.BOARD_STATUS = 'Y'
          AND A.BOARD_NO = #{ no }
    </select>

    <select id="selectReplyList" resultMap="replyResultMap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectReplyList() */
            A.REPLY_NO
             , A.REF_BOARD_NO
             , A.REPLY_BODY
             , A.REPLY_WRITER_MEMBER_NO
             , A.CREATED_DATE
             , B.MEMBER_NO
             , B.NICKNAME
        FROM TBL_REPLY A
                 JOIN TBL_MEMBER B ON (A.REPLY_WRITER_MEMBER_NO = B.MEMBER_NO)
        WHERE A.REPLY_STATUS = 'Y'
          AND A.REF_BOARD_NO = #{ refBoardNo }
        ORDER BY A.REPLY_NO
    </select>

    <insert id="insertReply">
        INSERT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#insertReply() */
        INTO TBL_REPLY A (
          A.REPLY_NO
        , A.REF_BOARD_NO
        , A.REPLY_BODY
        , A.REPLY_WRITER_MEMBER_NO
        )
        VALUES
            (
            SEQ_REPLY_NO.NEXTVAL
                , #{ refBoardNo }
                , #{ body }
                , #{ writerMemberNo }
            )
    </insert>

    <delete id="deleteReply" parameterType="long">
        DELETE /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#deleteReply() */
        FROM TBL_REPLY A
        WHERE A.REPLY_NO = #{ replyNo }
    </delete>

    <insert id="insertBoard">
        INSERT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#insertBoard() */
        INTO TBL_BOARD A (
          A.BOARD_NO
        , A.BOARD_TYPE
        , A.CATEGORY_CODE
        , A.BOARD_TITLE
        , A.BOARD_BODY
        , A.BOARD_WRITER_MEMBER_NO
        )
        VALUES
            (
            SEQ_BOARD_NO.NEXTVAL
                , 1
                , #{ categoryCode }
                , #{ title }
                , #{ body }
                , #{ writerMemberNo }
            )
    </insert>

    <select id="selectAllThumbnailList" resultMap="thumbnailBoardResultMap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectAllThumbnailList() */
            A.BOARD_NO
             , A.BOARD_TITLE
             , B.NICKNAME
             , A.BOARD_COUNT
             , A.CREATED_DATE
             , C.ATTACHMENT_NO
             , C.ORIGINAL_NAME
             , C.SAVED_NAME
             , C.SAVE_PATH
             , C.THUMBNAIL_PATH
        FROM TBL_BOARD A
                 JOIN TBL_MEMBER B ON (A.BOARD_WRITER_MEMBER_NO = B.MEMBER_NO)
                 JOIN TBL_ATTACHMENT C ON (A.BOARD_NO = C.REF_BOARD_NO)
        WHERE A.BOARD_STATUS = 'Y'
          AND C.ATTACHMENT_STATUS = 'Y'
          AND C.FILE_TYPE = 'TITLE'
        ORDER BY A.BOARD_NO DESC
    </select>


    <insert id="insertThumbnailContent">
        INSERT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#insertThumbnailContent() */
        INTO TBL_BOARD A
        (
        A.BOARD_NO
        , A.BOARD_TYPE
        , A.BOARD_TITLE
        , A.BOARD_BODY
        , A.BOARD_WRITER_MEMBER_NO
        )
        VALUES
        (
        SEQ_BOARD_NO.NEXTVAL
        , 2
        , #{ title }
        , #{ body }
        , #{ writerMemberNo }
        )
        <selectKey keyProperty="no" resultType="long" order="AFTER">
            SELECT
            SEQ_BOARD_NO.CURRVAL
            FROM DUAL
        </selectKey>
    </insert>

    <insert id="insertAttachment">
        INSERT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#insertAttachment() */
        INTO TBL_ATTACHMENT A (
          A.ATTACHMENT_NO
        , A.REF_BOARD_NO
        , A.ORIGINAL_NAME
        , A.SAVED_NAME
        , A.SAVE_PATH
        , A.FILE_TYPE
        , A.THUMBNAIL_PATH
        )
        VALUES
            (
            SEQ_ATTACHMENT_NO.NEXTVAL
                , #{ refBoardNo }
                , #{ originalName }
                , #{ savedName }
                , #{ savePath }
                , #{ fileType }
                , #{ thumbnailPath }
            )
    </insert>

    <update id="incrementBoardCount">
        UPDATE /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#incrementBoardCount() */
            TBL_BOARD A
        SET A.BOARD_COUNT = (SELECT B.BOARD_COUNT
                             FROM TBL_BOARD B
                             WHERE B.BOARD_NO = #{ no }) + 1
        WHERE A.BOARD_NO = #{ no }
    </update>

    <select id="selectThumbnailDetail" resultMap="thumbnailBoardResultMap">
        SELECT /* com.ohgiraffers.thymeleafspringboot.board.dao.BoardMapper#selectThumbnailDetail() */
            A.BOARD_NO
             , A.BOARD_TITLE
             , A.BOARD_BODY
             , A.BOARD_WRITER_MEMBER_NO
             , B.NICKNAME
             , A.BOARD_COUNT
             , A.CREATED_DATE
             , C.ATTACHMENT_NO
             , C.ORIGINAL_NAME
             , C.SAVED_NAME
             , C.SAVE_PATH
             , C.FILE_TYPE
             , C.THUMBNAIL_PATH
        FROM TBL_BOARD A
                 JOIN TBL_MEMBER B ON (A.BOARD_WRITER_MEMBER_NO = B.MEMBER_NO)
                 JOIN TBL_ATTACHMENT C ON (A.BOARD_NO = C.REF_BOARD_NO)
        WHERE A.BOARD_STATUS = 'Y'
          AND C.ATTACHMENT_STATUS = 'Y'
          AND A.BOARD_NO = #{ no }
    </select>

</mapper>

